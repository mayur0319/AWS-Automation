image:
  name: registry.gitlab.com/smithandnephew/it/aws/landingzone/projects/gitlab-runner:awscli_1.18_tf_1.8.0_tfsec_1.28.5_inspec_5.22.4
  entrypoint:
    - '/usr/bin/env'
    - "PATH=/opt/inspec/bin:/opt/inspec/embedded/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

variables:
  LZ_PROD_ROLE: arn:aws:iam::561790657625:role/codepipeline-default-role

before_script:
  - rm -rf .terraform
  - terraform --version
  - git config --global url."http://gitlab-ci-token:${CI_JOB_TOKEN}@".insteadOf "ssh://git@"
  - aws_credentials=$(aws sts assume-role --role-arn ${LZ_PROD_ROLE} --role-session-name "LzGitlabRunnerRole")
  - export AWS_ACCESS_KEY_ID=$(echo $aws_credentials|jq '.Credentials.AccessKeyId'|tr -d '"')
  - export AWS_SECRET_ACCESS_KEY=$(echo $aws_credentials|jq '.Credentials.SecretAccessKey'|tr -d '"')
  - export AWS_SESSION_TOKEN=$(echo $aws_credentials|jq '.Credentials.SessionToken'|tr -d '"')
  - cd terraform && terraform init
cache:
  key: terraform
  paths:
    - terraform/.terraform

stages:
  - unit-test-lambda
  - validate
  - plan
  - deploy
  - infra-test

unit-test-lambda:
  stage: unit-test-lambda
  script:
    - cd ..
    - cd tests && pip install -r requirements.txt
    - cd .. && python -m coverage run -m unittest && echo "Lambda Code Coverage.." && python -m coverage report src/*.py
  # only:
  #   - merge_requests
  tags:
    - LZ_GLOBAL_PROD

validate:
  stage: validate
  script:
    # - terraform fmt -check -recursive
    - terraform validate
  only:
    - merge_requests
  tags:
    - LZ_GLOBAL_PROD

plan:
  stage: plan
  script:
    - terraform plan -out=terraform_plan.tfplan
    - echo \`\`\`diff > plan.txt
    - terraform show -no-color terraform_plan.tfplan | tee -a plan.txt
    - echo \`\`\` >> plan.txt
    - sed -i -e 's/  +/+/g' plan.txt
    - sed -i -e 's/  ~/~/g' plan.txt
    - sed -i -e 's/  -/-/g' plan.txt
    - MESSAGE=$(cat plan.txt)
    - >-
      curl -X POST -g -H "PRIVATE-TOKEN: ${GITLAB_ACCESS_TOKEN}" 
      --data-urlencode "body=${MESSAGE}" 
      "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}/discussions"
  artifacts:
    paths:
      - terraform/
  only:
    - merge_requests
  tags:
    - LZ_GLOBAL_PROD

build:
  stage: plan
  script:
    - terraform plan -out=terraform_plan.tfplan
  artifacts:
    paths:
      - terraform/
  only:
    - main
  tags:
    - LZ_GLOBAL_PROD
    
deploy:
  stage: deploy
  script:
    - terraform apply -auto-approve terraform_plan.tfplan
  dependencies:
    - build
  when: manual
  allow_failure: false
  only:
    - main
  tags:
    - LZ_GLOBAL_PROD
  
infra-test:
  stage: infra-test
  script:
    - inspec exec infra-tests -t aws://
  dependencies:
    - deploy
  only:
    - main
  tags:
    - LZ_GLOBAL_PROD
